{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deven Grover\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = {\n  todo: \"To Do\",\n  inProgress: \"In Progress\",\n  done: \"Done\"\n};\nconst columnKeys = Object.keys(columns);\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [selectedColumn, setSelectedColumn] = useState(\"todo\");\n  const handleAddOrUpdate = e => {\n    e.preventDefault();\n    if (editingTaskId !== null) {\n      setTasks(prev => prev.map(task => task.id === editingTaskId ? {\n        ...task,\n        text: taskText,\n        column: selectedColumn\n      } : task));\n      setEditingTaskId(null);\n    } else {\n      const newTask = {\n        id: Date.now().toString(),\n        text: taskText,\n        column: selectedColumn\n      };\n      setTasks([...tasks, newTask]);\n    }\n    setTaskText(\"\");\n  };\n  const handleDelete = id => {\n    setTasks(prev => prev.filter(task => task.id !== id));\n  };\n  const handleEdit = task => {\n    setTaskText(task.text);\n    setEditingTaskId(task.id);\n    setSelectedColumn(task.column);\n  };\n  const moveToNextColumn = task => {\n    const nextColumn = {\n      todo: \"inProgress\",\n      inProgress: \"done\"\n    }[task.column];\n    if (nextColumn) {\n      setTasks(prev => prev.map(t => t.id === task.id ? {\n        ...t,\n        column: nextColumn\n      } : t));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Kanban Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"task-form\",\n      onSubmit: handleAddOrUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a task\",\n        value: taskText,\n        onChange: e => setTaskText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedColumn,\n        onChange: e => setSelectedColumn(e.target.value),\n        children: columnKeys.map(colKey => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: colKey,\n          children: columns[colKey]\n        }, colKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingTaskId ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: columnKeys.map(colKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: columns[colKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), tasks.filter(task => task.column === colKey).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [colKey !== \"done\" && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => moveToNextColumn(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(task),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              children: \"\\uD83D\\uDDD1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this))]\n      }, colKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rULp7mi1AEVswRTTsC4lSwlAZvs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","columns","todo","inProgress","done","columnKeys","Object","keys","App","_s","tasks","setTasks","taskText","setTaskText","editingTaskId","setEditingTaskId","selectedColumn","setSelectedColumn","handleAddOrUpdate","e","preventDefault","prev","map","task","id","text","column","newTask","Date","now","toString","handleDelete","filter","handleEdit","moveToNextColumn","nextColumn","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","colKey","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Deven Grover/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst columns = {\n  todo: \"To Do\",\n  inProgress: \"In Progress\",\n  done: \"Done\",\n};\n\nconst columnKeys = Object.keys(columns);\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [selectedColumn, setSelectedColumn] = useState(\"todo\");\n\n  const handleAddOrUpdate = (e) => {\n    e.preventDefault();\n    if (editingTaskId !== null) {\n      setTasks((prev) =>\n        prev.map((task) =>\n          task.id === editingTaskId\n            ? { ...task, text: taskText, column: selectedColumn }\n            : task\n        )\n      );\n      setEditingTaskId(null);\n    } else {\n      const newTask = {\n        id: Date.now().toString(),\n        text: taskText,\n        column: selectedColumn,\n      };\n      setTasks([...tasks, newTask]);\n    }\n    setTaskText(\"\");\n  };\n\n  const handleDelete = (id) => {\n    setTasks((prev) => prev.filter((task) => task.id !== id));\n  };\n\n  const handleEdit = (task) => {\n    setTaskText(task.text);\n    setEditingTaskId(task.id);\n    setSelectedColumn(task.column);\n  };\n\n  const moveToNextColumn = (task) => {\n    const nextColumn = {\n      todo: \"inProgress\",\n      inProgress: \"done\",\n    }[task.column];\n\n    if (nextColumn) {\n      setTasks((prev) =>\n        prev.map((t) =>\n          t.id === task.id ? { ...t, column: nextColumn } : t\n        )\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Kanban Board</h1>\n\n      <form className=\"task-form\" onSubmit={handleAddOrUpdate}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter a task\"\n          value={taskText}\n          onChange={(e) => setTaskText(e.target.value)}\n          required\n        />\n        <select\n          value={selectedColumn}\n          onChange={(e) => setSelectedColumn(e.target.value)}\n        >\n          {columnKeys.map((colKey) => (\n            <option key={colKey} value={colKey}>\n              {columns[colKey]}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">{editingTaskId ? \"Update\" : \"Add\"}</button>\n      </form>\n\n      <div className=\"board\">\n        {columnKeys.map((colKey) => (\n          <div key={colKey} className=\"column\">\n            <h2>{columns[colKey]}</h2>\n            {tasks\n              .filter((task) => task.column === colKey)\n              .map((task) => (\n                <div key={task.id} className=\"card\">\n                  <div className=\"card-header\">\n                    {(colKey !== \"done\") && (\n                      <input\n                        type=\"checkbox\"\n                        onChange={() => moveToNextColumn(task)}\n                      />\n                    )}\n                    <p>{task.text}</p>\n                  </div>\n                  <div className=\"actions\">\n                    <button onClick={() => handleEdit(task)}>✏️</button>\n                    <button onClick={() => handleDelete(task.id)}>🗑</button>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}