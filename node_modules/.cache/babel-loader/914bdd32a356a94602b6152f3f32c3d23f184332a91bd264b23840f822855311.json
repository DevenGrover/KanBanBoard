{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deven Grover\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [selectedColumn, setSelectedColumn] = useState(\"todo\");\n  const [darkMode, setDarkMode] = useState(false);\n  const columns = {\n    todo: \"To Do\",\n    inProgress: \"In Progress\",\n    done: \"Done\"\n  };\n  const columnKeys = Object.keys(columns);\n  const handleAddOrUpdate = e => {\n    e.preventDefault();\n    if (editingTaskId !== null) {\n      setTasks(prev => prev.map(task => task.id === editingTaskId ? {\n        ...task,\n        text: taskText,\n        column: selectedColumn\n      } : task));\n      setEditingTaskId(null);\n    } else {\n      const newTask = {\n        id: Date.now().toString(),\n        text: taskText,\n        column: selectedColumn\n      };\n      setTasks([...tasks, newTask]);\n    }\n    setTaskText(\"\");\n  };\n  const handleDelete = id => {\n    setTasks(prev => prev.filter(task => task.id !== id));\n  };\n  const handleEdit = task => {\n    setTaskText(task.text);\n    setEditingTaskId(task.id);\n    setSelectedColumn(task.column);\n  };\n  const handleCheckboxMove = (task, nextColumn) => {\n    setTasks(prev => prev.map(t => t.id === task.id ? {\n      ...t,\n      column: nextColumn\n    } : t));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? \"dark\" : \"light\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-button\",\n        onClick: () => setDarkMode(!darkMode),\n        children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddOrUpdate,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task\",\n        value: taskText,\n        onChange: e => setTaskText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedColumn,\n        onChange: e => setSelectedColumn(e.target.value),\n        children: columnKeys.map(colKey => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: colKey,\n          children: columns[colKey]\n        }, colKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingTaskId ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: columnKeys.map(colKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: columns[colKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), tasks.filter(task => task.column === colKey).map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [(colKey === \"todo\" || colKey === \"inProgress\") && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => handleCheckboxMove(task, colKey === \"todo\" ? \"inProgress\" : \"done\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(task),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              children: \"\\uD83D\\uDDD1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), index !== tasks.filter(t => t.column === colKey).length - 1 && /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this))]\n      }, colKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YpG9u7VElrX7kRsVrSeNTrNxSzM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","taskText","setTaskText","editingTaskId","setEditingTaskId","selectedColumn","setSelectedColumn","darkMode","setDarkMode","columns","todo","inProgress","done","columnKeys","Object","keys","handleAddOrUpdate","e","preventDefault","prev","map","task","id","text","column","newTask","Date","now","toString","handleDelete","filter","handleEdit","handleCheckboxMove","nextColumn","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","required","colKey","index","length","_c","$RefreshReg$"],"sources":["C:/Users/Deven Grover/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [selectedColumn, setSelectedColumn] = useState(\"todo\");\n  const [darkMode, setDarkMode] = useState(false);\n\n  const columns = {\n    todo: \"To Do\",\n    inProgress: \"In Progress\",\n    done: \"Done\",\n  };\n  const columnKeys = Object.keys(columns);\n\n  const handleAddOrUpdate = (e) => {\n    e.preventDefault();\n    if (editingTaskId !== null) {\n      setTasks((prev) =>\n        prev.map((task) =>\n          task.id === editingTaskId\n            ? { ...task, text: taskText, column: selectedColumn }\n            : task\n        )\n      );\n      setEditingTaskId(null);\n    } else {\n      const newTask = {\n        id: Date.now().toString(),\n        text: taskText,\n        column: selectedColumn,\n      };\n      setTasks([...tasks, newTask]);\n    }\n    setTaskText(\"\");\n  };\n\n  const handleDelete = (id) => {\n    setTasks((prev) => prev.filter((task) => task.id !== id));\n  };\n\n  const handleEdit = (task) => {\n    setTaskText(task.text);\n    setEditingTaskId(task.id);\n    setSelectedColumn(task.column);\n  };\n\n  const handleCheckboxMove = (task, nextColumn) => {\n    setTasks((prev) =>\n      prev.map((t) =>\n        t.id === task.id ? { ...t, column: nextColumn } : t\n      )\n    );\n  };\n\n  return (\n    <div className={`App ${darkMode ? \"dark\" : \"light\"}`}>\n      <header className=\"header\">\n        <h1>Kanban Board</h1>\n        <button className=\"theme-button\" onClick={() => setDarkMode(!darkMode)}>\n          {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\n        </button>\n      </header>\n\n      <form onSubmit={handleAddOrUpdate} className=\"task-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Task\"\n          value={taskText}\n          onChange={(e) => setTaskText(e.target.value)}\n          required\n        />\n        <select\n          value={selectedColumn}\n          onChange={(e) => setSelectedColumn(e.target.value)}\n        >\n          {columnKeys.map((colKey) => (\n            <option key={colKey} value={colKey}>\n              {columns[colKey]}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">{editingTaskId ? \"Update\" : \"Add\"}</button>\n      </form>\n\n      <div className=\"board\">\n        {columnKeys.map((colKey) => (\n          <div key={colKey} className=\"column\">\n            <h2>{columns[colKey]}</h2>\n            {tasks\n              .filter((task) => task.column === colKey)\n              .map((task, index) => (\n                <div key={task.id} className=\"card\">\n                  <div className=\"card-header\">\n                    {(colKey === \"todo\" || colKey === \"inProgress\") && (\n                      <input\n                        type=\"checkbox\"\n                        onChange={() =>\n                          handleCheckboxMove(\n                            task,\n                            colKey === \"todo\" ? \"inProgress\" : \"done\"\n                          )\n                        }\n                      />\n                    )}\n                    <p>{task.text}</p>\n                  </div>\n                  <div className=\"actions\">\n                    <button onClick={() => handleEdit(task)}>✏️</button>\n                    <button onClick={() => handleDelete(task.id)}>🗑</button>\n                  </div>\n                  {index !== tasks.filter((t) => t.column === colKey).length - 1 && (\n                    <hr />\n                  )}\n                </div>\n              ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}