{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deven Grover\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = [\"To Do\", \"In Progress\", \"Done\"];\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [selectedColumn, setSelectedColumn] = useState(\"To Do\");\n  const handleAddOrUpdate = e => {\n    e.preventDefault();\n    if (editingTaskId !== null) {\n      // Update task\n      setTasks(prev => prev.map(task => task.id === editingTaskId ? {\n        ...task,\n        text: taskText,\n        column: selectedColumn\n      } : task));\n      setEditingTaskId(null);\n    } else {\n      // Create task\n      const newTask = {\n        id: Date.now(),\n        text: taskText,\n        column: selectedColumn\n      };\n      setTasks([...tasks, newTask]);\n    }\n    setTaskText(\"\");\n  };\n  const handleDelete = id => {\n    setTasks(prev => prev.filter(task => task.id !== id));\n  };\n  const handleEdit = task => {\n    setEditingTaskId(task.id);\n    setTaskText(task.text);\n    setSelectedColumn(task.column);\n  };\n  const moveTask = (id, direction) => {\n    setTasks(prev => prev.map(task => {\n      if (task.id === id) {\n        const currentIndex = initialColumns.indexOf(task.column);\n        const newIndex = currentIndex + direction;\n        if (newIndex >= 0 && newIndex < initialColumns.length) {\n          return {\n            ...task,\n            column: initialColumns[newIndex]\n          };\n        }\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kanban Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddOrUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskText,\n        placeholder: \"Task\",\n        onChange: e => setTaskText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedColumn,\n        onChange: e => setSelectedColumn(e.target.value),\n        children: initialColumns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: col,\n          children: col\n        }, col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingTaskId ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: initialColumns.map(col => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: col\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), tasks.filter(task => task.column === col).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(task),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              children: \"\\uD83D\\uDDD1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => moveTask(task.id, -1),\n              children: \"\\u2B05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => moveTask(task.id, 1),\n              children: \"\\u27A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this))]\n      }, col, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xbIUvMR5rsAe8K3HQ7AabS4GMec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialColumns","App","_s","tasks","setTasks","taskText","setTaskText","editingTaskId","setEditingTaskId","selectedColumn","setSelectedColumn","handleAddOrUpdate","e","preventDefault","prev","map","task","id","text","column","newTask","Date","now","handleDelete","filter","handleEdit","moveTask","direction","currentIndex","indexOf","newIndex","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","placeholder","onChange","target","required","col","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Deven Grover/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst initialColumns = [\"To Do\", \"In Progress\", \"Done\"];\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [selectedColumn, setSelectedColumn] = useState(\"To Do\");\n\n  const handleAddOrUpdate = (e) => {\n    e.preventDefault();\n    if (editingTaskId !== null) {\n      // Update task\n      setTasks((prev) =>\n        prev.map((task) =>\n          task.id === editingTaskId\n            ? { ...task, text: taskText, column: selectedColumn }\n            : task\n        )\n      );\n      setEditingTaskId(null);\n    } else {\n      // Create task\n      const newTask = {\n        id: Date.now(),\n        text: taskText,\n        column: selectedColumn,\n      };\n      setTasks([...tasks, newTask]);\n    }\n    setTaskText(\"\");\n  };\n\n  const handleDelete = (id) => {\n    setTasks((prev) => prev.filter((task) => task.id !== id));\n  };\n\n  const handleEdit = (task) => {\n    setEditingTaskId(task.id);\n    setTaskText(task.text);\n    setSelectedColumn(task.column);\n  };\n\n  const moveTask = (id, direction) => {\n    setTasks((prev) =>\n      prev.map((task) => {\n        if (task.id === id) {\n          const currentIndex = initialColumns.indexOf(task.column);\n          const newIndex = currentIndex + direction;\n          if (newIndex >= 0 && newIndex < initialColumns.length) {\n            return { ...task, column: initialColumns[newIndex] };\n          }\n        }\n        return task;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Kanban Board</h1>\n      <form onSubmit={handleAddOrUpdate}>\n        <input\n          type=\"text\"\n          value={taskText}\n          placeholder=\"Task\"\n          onChange={(e) => setTaskText(e.target.value)}\n          required\n        />\n        <select\n          value={selectedColumn}\n          onChange={(e) => setSelectedColumn(e.target.value)}\n        >\n          {initialColumns.map((col) => (\n            <option key={col} value={col}>\n              {col}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">{editingTaskId ? \"Update\" : \"Add\"}</button>\n      </form>\n\n      <div className=\"board\">\n        {initialColumns.map((col) => (\n          <div key={col} className=\"column\">\n            <h2>{col}</h2>\n            {tasks\n              .filter((task) => task.column === col)\n              .map((task) => (\n                <div key={task.id} className=\"card\">\n                  <p>{task.text}</p>\n                  <div className=\"actions\">\n                    <button onClick={() => handleEdit(task)}>‚úèÔ∏è</button>\n                    <button onClick={() => handleDelete(task.id)}>üóë</button>\n                    <button onClick={() => moveTask(task.id, -1)}>‚¨Ö</button>\n                    <button onClick={() => moveTask(task.id, 1)}>‚û°</button>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}